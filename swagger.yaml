swagger: '2.0'
info:
  description: Move your app forward with the Snabb API
  version: 1.0.0
  title: Snabb API
  contact:
    name: Snabb Dev Systems
    url: developers.snabb.io
    email: dev.systems@snabb.io
basePath: /api/v1
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  OauthPasswordSecurity:
    type: oauth2
    flow: application
    tokenUrl: 'https://oauth.simple.api/token'
    scopes:
      admin: Admin scope
      user: User scope
  OauthApplicationSecurity:
    type: oauth2
    flow: password
    tokenUrl: 'https://oauth.simple.api/token'
    scopes:
      admin: Admin scope
      user: User scope
      api: API scope
security:
  - OauthApplicationSecurity:
      - api
  - OauthPasswordSecurity:
      - user
paths:
  /o/token:
    post:
      tags:
        - Auth
      summary: Client applications authentication endpoint
      description: |-
        OAuth 2.0 Authentication endpoint. 

         <b>Warning</b>: Only application/x-www-form-urlencoded or multipart/form-data body encodings are supported.
      consumes:
        - application/x-www-form-urlencoded
      operationId: authPOST
      parameters:
        - name: client_id
          in: formData
          description: The client id.
          required: true
          type: string
          x-example: jmTfWIiqat02420meIeF
        - name: username
          in: formData
          description: The client's username.
          required: true
          type: string
          x-example: user@snabb.io
        - name: password
          in: formData
          description: The client's password.
          required: true
          type: string
          x-example: passw0rd!
        - name: grant_type
          in: formData
          description: The grant type.
          required: true
          type: string
          x-example: password
      responses:
        '200':
          description: Access token information
          schema:
            $ref: '#/definitions/Token'
          examples:
            application/json:
              access_token: J1qK1c18UUGJFAzz9xnH56584l4
              token_type: bearer
              expires_in: 2592000
              scope: api
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-swagger-router-controller: Auth
  /user/forgotPassword:
    post:
      tags:
        - User
      summary: Forgot Password
      description: >-
        When a user does not remember their password, this endpoint will send an
        email to the given user with instructions to reset their password.
      operationId: forgotPasswordPOST
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: email
          description: The user's email address to send the email to.
          in: formData
          required: true
          type: string
          x-example: darth.vader@snabb.io
      responses:
        '204':
          description: Empty response when the given email address exists in our system.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-swagger-router-controller: User
  /user/resetPassword:
    post:
      tags:
        - User
      summary: Reset passwrod
      description: Reset password for user.
      operationId: resetPassword
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: hash
          description: Unique hash of user
          in: formData
          required: true
          type: string
          x-example: r4w4fw45t542fd34234$
        - name: password
          description: New password for user
          in: formData
          required: true
          type: string
          x-example: p4sw0rd
      responses:
        '200':
          description: Empty response when the given email address exists in our system.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-swagger-router-controller: User
  /user/profile:
    get:
      tags:
        - User
      summary: User Profile
      description: >-
        The User Profile endpoint returns information about the Snabb user that
        has authorized with the application.
      operationId: profileGET
      parameters: []
      responses:
        '200':
          description: Profile information for a user
          schema:
            $ref: '#/definitions/Profile'
          examples:
            application/json:
              profile_id: 3254345
              company_name: Knight Industries Inc.
              first_name: Michael
              last_name: Knight
              email: michael.knight@snabb.io
              phone: '+46712345678'
              verified: false
              send_email_notifications: false
              send_sms_notifications: true
              user_lang: en
              updated_at: 1441146983
              created_at: 1441146983
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-swagger-router-controller: User
  '/user/profile/{profile_id}':
    put:
      tags:
        - User
      summary: Update User
      operationId: profilePUT
      description: Update your profile info.
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: profile_id
          in: path
          description: ID of the user to update
          required: true
          type: string
          x-example: '1234321'
        - name: company_name
          description: New company name.
          in: formData
          required: false
          type: string
          x-example: Knight Industries Inc.
        - name: first_name
          description: New user first_name
          in: formData
          required: false
          type: string
          x-example: Michael
        - name: last_name
          description: New user last_name.
          in: formData
          required: false
          type: string
          x-example: Knight
        - name: email
          description: The user's email address to send the reset email to.
          in: formData
          required: false
          type: string
          x-example: michael.knight@snabb.io
        - name: phone
          description: New user phone
          in: formData
          required: false
          type: string
          x-example: +34 656565545
        - name: user_lang
          description: New user selected language
          in: formData
          required: false
          type: string
          x-example: en
        - name: send_email_notifications
          description: Manage email notifications status
          in: formData
          required: false
          type: boolean
          x-example: true
        - name: send_sms_notifications
          description: Manage sms notifications status
          in: formData
          required: false
          type: boolean
          x-example: true
      responses:
        '200':
          description: Updated Profile.
          schema:
            $ref: '#/definitions/Profile'
          examples:
            application/json:
              profile_id: 3254345
              company_name: Knight Industries Inc.
              first_name: Michael
              last_name: Knight
              email: michael.knight@snabb.io
              phone: '+46712345678'
              verified: false
              send_email_notifications: false
              send_sms_notifications: true
              user_lang: en
              updated_at: 1441146983
              created_at: 1441146983
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-swagger-router-controller: User
  /user/register:
    post:
      tags:
        - User
      summary: Client applications account registration endpoint
      description: |-
        User registration endpoint. 

         <b>Warning</b>: Only application/x-www-form-urlencoded or multipart/form-data body encodings are supported.
      consumes:
        - application/x-www-form-urlencoded
      operationId: registerPOST
      parameters:
        - name: company_name
          in: formData
          description: The company name.
          required: true
          type: string
          x-example: Knight Industries Inc.
        - name: email
          in: formData
          description: The email address to be used.
          required: true
          type: string
          x-example: michael.knight@snabb.io
        - name: password
          in: formData
          description: The client's password.
          required: true
          type: string
          x-example: passw0rd!
        - name: phone
          in: formData
          description: User phone.
          required: true
          type: string
          x-example: '+46712345678'
        - name: user_lang
          in: formData
          description: Default user lang (optional).
          required: false
          type: string
          x-example: es
      responses:
        '200':
          description: Profile information for a registered user
          schema:
            $ref: '#/definitions/Profile'
          examples:
            application/json:
              profile_id: 3254345
              company_name: Knight Industries Inc.
              first_name: ''
              last_name: ''
              email: michael.knight@snabb.io
              phone: '+46712345678'
              verified: false
              send_email_notifications: true
              send_sms_notifications: true
              user_lang: en
              updated_at: 1441146983
              created_at: 1441146983
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
          examples:
            application/json:
              code: '400103'
              key: email_already_exists
              message: Email already exists
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-swagger-router-controller: User
  /user/sendVerifyEmail:
    post:
      tags:
        - User
      summary: Resend verify email
      description: >-
        This endpoint allow to resend activation account email to a user.
        Regenerate the user hash and send it to the user email.
      operationId: sendVerifyMail
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: email
          description: The user's email address to send the activation email to.
          in: formData
          required: true
          type: string
          x-example: darth.vader@snabb.io
      responses:
        '200':
          description: Empty response when the given email address exists in our system.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-swagger-router-controller: User
  /user/updatePassword:
    post:
      tags:
        - User
      summary: Update Password
      description: Update user password.
      operationId: updatePassword
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: current_password
          description: Current user password.
          in: formData
          required: true
          type: string
          x-example: p4sw0rd
        - name: new_password
          description: New user password.
          in: formData
          required: true
          type: string
          x-example: N3w_4w3s0m3_p4sw0rd
      responses:
        '200':
          description: Empty response when the given email address exists in our system.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-swagger-router-controller: User
  /user/verifyUser:
    post:
      tags:
        - User
      summary: Verify User
      description: Verify user email.
      operationId: verifyUser
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: hash
          description: Unique hash of user
          in: formData
          required: true
          type: string
          x-example: r4w4fw45t542fd34234$
      responses:
        '200':
          description: Empty response when the given email address exists in our system.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-swagger-router-controller: User
  /address/validateAddress:
    post:
      tags:
        - Address
      summary: Verify Address.
      description: Verify if Snabb works in this address.
      operationId: verifyAddress
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: address
          description: Address formatted like gmaps.
          in: formData
          required: true
          type: string
          x-example: 'Passatge Dr. Serra, 46004, València, Spain'
      responses:
        '200':
          description: >-
            Return ADDRESS_OK if Snabb works in this address. If not, you get an
            error code.
          schema:
            $ref: '#/definitions/Error'
          examples:
            application/json:
              key: ADDRESS_OK
              code: 200206
              message: Address valid
        '400':
          description: Return KEY_ADDRESS_REQUIRED if you don't send "address" field.
          examples:
            application/json:
              code: 400401
              message: Key address is required
              key: KEY_ADDRESS_REQUIRED
      x-swagger-router-controller: Address
definitions:
  Token:
    type: object
    properties:
      access_token:
        type: string
        description: The access token issued by the authorization server.
      token_type:
        type: string
        description: The type of the token issued.
      expires_in:
        type: number
        format: int32
        description: >-
          The lifetime in seconds of the access token. For example, the value
          "3600" denotes that the access token will expire in one hour from the
          time the response was generated.
      scope:
        type: string
        description: Scope usage of the token.
  Activities:
    type: object
    properties:
      offset:
        type: integer
        format: int32
        description: Position in pagination.
      limit:
        type: integer
        format: int32
        description: Number of items to retrieve (100 max).
      count:
        type: integer
        format: int32
        description: Total number of items available.
      history:
        type: array
        items:
          $ref: '#/definitions/Activity'
  Activity:
    type: object
    properties:
      uuid:
        type: string
        description: Unique identifier for the activity
  Contact:
    type: object
    properties:
      first_name:
        type: string
        description: The first name of the contact.
      last_name:
        type: string
        description: The last name of the contact.
      email:
        type: string
        description: The email address of the contact.
      phone:
        type: object
        description: The phone number of the contact.
        allOf:
          - $ref: '#/definitions/Phone'
  Phone:
    type: object
    properties:
      number:
        type: string
        description: >-
          Phone number. This could be either a local phone number in which the
          associated country code will be automatically appended or an
          international phone number with either the 00 or + included
  Courier:
    type: object
    properties:
      driver_id:
        type: string
        description: Unique identifier representing a driver.
      created_at:
        type: string
        description: >-
          Unix timestamp representing the moment in which the driver was
          created.
      updated_at:
        type: string
        description: >-
          Unix timestamp representing the last time when the driver information
          was updated.
      status:
        type: string
        description: Unique status code for couriers current state.
        enum:
          - free
          - busy
          - picking
          - on_route
      email:
        type: string
        description: The email address of the driver.
      profile_picture_url:
        type: string
        description: The url of the courier's profile picture.
      phone:
        type: string
        description: The phone number of the courier with country code included.
      deliveries_count:
        type: number
        description: Number of deliveries performed by the courier.
      reviews:
        type: object
        description: All the reviews associated with the courier.
        allOf:
          - $ref: '#/definitions/Reviews'
      transport:
        type: object
        description: The transportation used by the courier to perform the deliveries.
        allOf:
          - $ref: '#/definitions/Transport'
  Product:
    type: object
    properties:
      product_id:
        type: string
        description: >-
          Unique identifier representing a specific product for a given latitude
          & longitude. For example, uberX in San Francisco will have a different
          product_id than uberX in Los Angeles.
      description:
        type: string
        description: Description of product.
      display_name:
        type: string
        description: Display name of product.
      capacity:
        type: string
        description: 'Capacity of product. For example, 4 people.'
      image:
        type: string
        description: Image URL representing the product.
  Currency:
    type: object
    properties:
      iso_code:
        type: string
        description: '[ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code.'
      symbol:
        type: string
        description: Symbol code for the given currency.
  Address:
    type: object
    properties:
      address_id:
        type: string
        description: Unique identifier for the address.
      street:
        type: string
        description: Plain text name of the city. e.g. Stockholm.
      postcode:
        type: string
        description: Postal code of the address. e.g. 11218
      city:
        type: object
        description: The city which this address belongs to.
        allOf:
          - $ref: '#/definitions/City'
  City:
    type: object
    properties:
      city_id:
        type: string
        description: Unique identifier for the city.
      name:
        type: string
        description: Plain text name of the city. e.g. Stockholm.
      region:
        type: object
        description: The region which the city belongs to.
        allOf:
          - $ref: '#/definitions/Region'
  Country:
    type: object
    properties:
      country_id:
        type: string
        description: Unique identifier for the country.
      name:
        type: string
        description: Plain text name of the country. e.g. Sweden.
      iso_code:
        type: string
        description: >-
          [ISO 31661-1](https://en.wikipedia.org/wiki/ISO_3166-1) 2 character
          country code.
      default_currency:
        type: string
        description: The default currency to use in this country.
        allOf:
          - $ref: '#/definitions/Currency'
  Region:
    type: object
    properties:
      region_id:
        type: string
        description: Unique identifier for the region.
      name:
        type: string
        description: Plain text name of the region. e.g. Uppland.
      country:
        type: object
        description: The country which the region belongs to.
        allOf:
          - $ref: '#/definitions/Country'
  Location:
    type: object
    properties:
      location_id:
        type: string
        description: Unique identifier representing a location.
      created_at:
        type: string
        description: >-
          Unix timestamp representing the moment in which the location was
          created.
      updated_at:
        type: string
        description: >-
          Unix timestamp representing the last time when the location
          information was updated.
      contact:
        type: object
        description: Main contact associated with the given location
        allOf:
          - $ref: '#/definitions/Contact'
      formatted_address:
        type: string
        description: 'Pre-formatted address. eg. Gavlegatan 18B, 11330, Stockholm'
      address:
        type: object
        description: Associated address with the location.
        allOf:
          - $ref: '#/definitions/Address'
      latitude:
        type: number
        format: float
        description: The courier's latitude.
      longitude:
        type: number
        format: float
        description: The courier's longitude.
      bearing:
        type: number
        format: float
        description: The courier's bearing (degrees from 0 to 359).
      comment:
        type: string
        description: Special comments or instructions associated with the given location.
  Profile:
    type: object
    properties:
      profile_id:
        type: integer
        description: Unique identifier representing a user.
      company_name:
        type: string
        description: Name of the company.
      first_name:
        type: string
        description: First name of the user.
      last_name:
        type: string
        description: Last name of the user.
      email:
        type: string
        description: Email address of the user
      phone:
        type: string
        description: The phone number of the user.
      verified:
        type: boolean
        description: >-
          Flag representing if the user has been verified or not. In case is not
          verified, the user will have restricted access to the API and only
          certain actions will be allowed.
      send_email_notifications:
        type: boolean
        description: Flag representing if the user want to receive email notifications.
      send_sms_notifications:
        type: boolean
        description: Flag representing if the user want to receive sms notifications.
      user_lang:
        type: string
        description: >-
          [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) 2 character
          language code.
      updated_at:
        type: integer
        description: Unix timestamp representing the moment in which the user was updated.
      created_at:
        type: integer
        description: Unix timestamp representing the moment in which the user was created.
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
        description: Unique identifier representing the error being returned to the user.
      key:
        type: string
        description: Unique key code to identify the error.
      message:
        type: string
        description: >-
          A human readable error message (Note: Remember that this error is not
          localized and will be returned only in english.
  Delivery:
    type: object
    properties:
      delivery_id:
        type: string
        description: Unique identifier representing a specific delivery.
      created_at:
        type: integer
        format: int32
        description: Unix timestamp representing the moment the delivery was created.
      last_update_at:
        type: integer
        format: int32
        description: >-
          Unix timestamp representing the last time when the delivery
          information was updated.
      pickup_location:
        type: object
        description: The pickup location information.
        allOf:
          - $ref: '#/definitions/Location'
      dropoff_location:
        type: object
        description: The dropoff location information.
        allOf:
          - $ref: '#/definitions/Location'
      tracking_url:
        type: string
        description: >-
          Automatically generated tracking URL to be used in order to track and
          monitor in real time the status of the current delivery.
  Quote:
    type: object
    properties:
      quote_id:
        type: string
        description: >-
          Unique identifier representing a specific quote. Once created this id
          can be passed into the delivery creation to make sure the delivery
          prices match the generated values by the quote (so we don't find any
          surprises down the road!).
      distance:
        type: number
        format: float
        description: Estimated distance in Km of the total route.
      duration:
        type: number
        format: int32
        description: Estimated duration in <b>minutes</b> of the delivery.
      price:
        type: string
        description: The calculated price for the delivery.
      currency:
        type: object
        description: The currency used for the price calculation
        allOf:
          - $ref: '#/definitions/Currency'
      expires_at:
        type: string
        description: Unix timestamp representing the time when the quote will expire.
      pickup_location:
        type: object
        description: The pick up location information.
        allOf:
          - $ref: '#/definitions/Location'
      pickup_eta:
        type: number
        format: int32
        description: The estimated time in <b>minutes</b> for pick up for this quote.
      dropoff_location:
        type: object
        description: The drop off location information.
        allOf:
          - $ref: '#/definitions/Location'
      dropoff_eta:
        type: number
        format: int32
        description: The estimated time in <b>minutes</b> for drop off for this quote.
  NewQuote:
    type: object
    properties:
      pickup_location:
        type: object
        description: The pick up location information.
        allOf:
          - $ref: '#/definitions/Location'
      dropoff_location:
        type: object
        description: The drop off location information.
        allOf:
          - $ref: '#/definitions/Location'
  Review:
    type: object
    properties:
      score:
        type: number
        format: float
        description: The rating given by the users for a particular delivery/courier.
      comment:
        type: string
        description: Comment provided by the user to give further feedback.
  Reviews:
    type: object
    properties:
      average_score:
        type: number
        format: float
        description: >-
          The average score from all the reviews performed for a given
          delivery/courier.
      reviews:
        type: array
        description: Array containing all the reviews for a given courier/delivery.
        items:
          allOf:
            - $ref: '#/definitions/Review'
  Transport:
    type: object
    properties:
      transport_id:
        type: string
        description: Unique identifier for the transportation type.
      type:
        type: string
        description: Value representing the transportation type.
        enum:
          - Foot
          - Bike
          - CargoBike
          - Motorcycle
          - Car
          - Truck
      max_weight:
        type: number
        format: int32
        description: Value in <b>KG</b> of the maximum weight this transport type can hold.
      max_dimensions:
        type: object
        description: Maximum dimensions of the package this transport type can hold.
        allOf:
          - $ref: '#/definitions/Dimension'
  Dimension:
    type: object
    properties:
      height:
        type: number
        format: int32
        description: Height in <b>cm</b>
      width:
        type: number
        format: int32
        description: Width in <b>cm</b>
      depth:
        type: number
        format: int32
        description: Depth in <b>cm</b>
