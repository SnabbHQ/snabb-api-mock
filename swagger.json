{
  "swagger": "2.0",
  "info": {
    "description": "Move your app forward with the Snabb API",
    "version": "1.0.0",
    "title": "Snabb API",
    "contact": {
      "name": "Snabb Dev Systems",
      "url": "developers.snabb.io",
      "email": "dev.systems@snabb.io"
    }
  },
  "host": "snabb-api-mock.herokuapp.com",
  "basePath": "/api/v1",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "OauthPasswordSecurity": {
      "type": "oauth2",
      "flow": "application",
      "tokenUrl": "https://oauth.simple.api/token",
      "scopes": {
        "admin": "Admin scope",
        "user": "User scope"
      }
    },
    "OauthApplicationSecurity": {
      "type": "oauth2",
      "flow": "password",
      "tokenUrl": "https://oauth.simple.api/token",
      "scopes": {
        "admin": "Admin scope",
        "user": "User scope",
        "api": "API scope"
      }
    }
  },
  "security": [
    {
      "OauthApplicationSecurity": [
        "api"
      ]
    },
    {
      "OauthPasswordSecurity": [
        "user"
      ]
    }
  ],
  "paths": {
    "/oauth/token": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Authentication endpoint",
        "description": "OAuth 2.0 Authentication endpoint. \n\n <b>Warning</b>: Only application/x-www-form-urlencoded or multipart/form-data body encodings are supported.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "operationId": "authPOST",
        "parameters": [
          {
            "name": "client_id",
            "in": "formData",
            "description": "The client id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "client_secret",
            "in": "formData",
            "description": "The client secret.",
            "required": true,
            "type": "string"
          },
          {
            "name": "scope",
            "in": "formData",
            "description": "The scope.",
            "required": true,
            "type": "string"
          },
          {
            "name": "grant_type",
            "in": "formData",
            "description": "The grant type.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Access token information",
            "schema": {
              "$ref": "#/definitions/Token"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-swagger-router-controller": "User"
      }
    },
    "/deliveries/quote": {
      "post": {
        "summary": "Quote",
        "operationId": "quotePOST",
        "description": "The Quote endpoint returns a price for each product offered at a given location. <br/>The response includes [ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code for situations requiring currency conversion.\n\n\n<b>Warning:</b> Quotes have a valid limited duration of <b>10min</b>. This is done to prevent un-expected costs if the time between the quote and the actual delivery order are to far apart. After this period, the quote won't be able to be used to create a new delivery.",
        "parameters": [
          {
            "name": "quoteInfo",
            "in": "body",
            "description": "Information required to generate a valid quote to be given to the user.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewQuote"
            }
          }
        ],
        "tags": [
          "Deliveries"
        ],
        "responses": {
          "200": {
            "description": "An array of price estimates by product.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Quote"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/deliveries/{delivery_id}": {
      "get": {
        "tags": [
          "Deliveries"
        ],
        "summary": "Delivery",
        "operationId": "deliveryGET",
        "description": "Get a particular delivery information.",
        "parameters": [
          {
            "name": "delivery_id",
            "in": "path",
            "description": "ID of the delivery to fetch",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A delivery response.",
            "schema": {
              "$ref": "#/definitions/Delivery"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-swagger-router-controller": "Delivery"
      }
    },
    "/deliveries/address/validate": {
      "get": {
        "tags": [
          "Deliveries"
        ],
        "summary": "Validate an Address",
        "operationId": "addressGET",
        "description": "Simple helper endpoint to validate an address before creating a quote or a delivery.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "If is a valid address",
            "schema": {
              "$ref": "#/definitions/Delivery"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-swagger-router-controller": "Delivery"
      }
    },
    "/history": {
      "get": {
        "summary": "User Activity",
        "description": "The User Activity endpoint returns data about a user's lifetime activity with Uber. The response will include pickup locations and times, dropoff locations and times, the distance of past requests, and information about which products were requested.<br><br>The history array in the response will have a maximum length based on the limit parameter. The response value count may exceed limit, therefore subsequent API requests may be necessary.",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "format": "int32",
            "description": "Offset the list of returned results by this amount. Default is zero."
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "format": "int32",
            "description": "Number of items to retrieve. Default is 5, maximum is 100."
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "History information for the given user",
            "schema": {
              "$ref": "#/definitions/Activities"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/current": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "User Current Activity",
        "description": "The User Current Activity endpoint returns data about a ongoing user's lifetime activity with Snabb. The response will include pickup locations and times, dropoff locations and times, the distance of ongoing requests, and information about which products were requested.<br><br>The history array in the response will have a maximum length based on the limit parameter. The response value count may exceed limit, therefore subsequent API requests may be necessary.",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "format": "int32",
            "description": "Offset the list of returned results by this amount. Default is zero."
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "format": "int32",
            "description": "Number of items to retrieve. Default is 5, maximum is 100."
          }
        ],
        "responses": {
          "200": {
            "description": "Ongoing deliveries information for the given user",
            "schema": {
              "$ref": "#/definitions/Activities"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/profile": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "User Profile",
        "description": "The User Profile endpoint returns information about the Snabb user that has authorized with the application.",
        "operationId": "profileGET",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Profile information for a user",
            "schema": {
              "$ref": "#/definitions/Profile"
            },
            "examples": {
              "application/json": [
                {
                  "first_name": "Michael",
                  "last_name": "Knight",
                  "email": "michael.knight@snabb.io",
                  "phone": {
                    "number": "+46712345678"
                  },
                  "thumbnail": "https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcTlovN715rKGVOscWvovnblMwpvwMlknTosSXthVP9xLlW7KCfw"
                }
              ]
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-swagger-router-controller": "User"
      }
    },
    "/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Product Types",
        "description": "The Products endpoint returns information about the *Uber* products offered at a given location. The response includes the display name and other details about each product, and lists the products in the proper display order.",
        "operationId": "productsGET",
        "parameters": [
          {
            "name": "latitude",
            "in": "query",
            "description": "Latitude component of location.",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "longitude",
            "in": "query",
            "description": "Longitude component of location.",
            "required": true,
            "type": "number",
            "format": "double"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of products",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-swagger-router-controller": "Products"
      }
    }
  },
  "definitions": {
    "Token": {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string",
          "description": "The access token issued by the authorization server."
        },
        "token_type": {
          "type": "string",
          "description": "The type of the token issued."
        },
        "expires_in": {
          "type": "number",
          "format": "int32",
          "description": "The lifetime in seconds of the access token. For example, the value \"3600\" denotes that the access token will expire in one hour from the time the response was generated."
        },
        "scope": {
          "type": "string",
          "description": "Scope usage of the token."
        }
      }
    },
    "Activities": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "Position in pagination."
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "Number of items to retrieve (100 max)."
        },
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of items available."
        },
        "history": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Activity"
          }
        }
      }
    },
    "Activity": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "description": "Unique identifier for the activity"
        }
      }
    },
    "Contact": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string",
          "description": "The first name of the contact."
        },
        "last_name": {
          "type": "string",
          "description": "The last name of the contact."
        },
        "email": {
          "type": "string",
          "description": "The email address of the contact."
        },
        "phone": {
          "type": "object",
          "description": "The phone number of the contact.",
          "allOf": [
            {
              "$ref": "#/definitions/Phone"
            }
          ]
        }
      }
    },
    "Phone": {
      "type": "object",
      "properties": {
        "number": {
          "type": "string",
          "description": "Phone number. This could be either a local phone number in which the associated country code will be automatically appended or an international phone number with either the 00 or + included"
        }
      }
    },
    "Courier": {
      "type": "object",
      "properties": {
        "driver_id": {
          "type": "string",
          "description": "Unique identifier representing a driver."
        },
        "created_at": {
          "type": "string",
          "description": "Unix timestamp representing the moment in which the driver was created."
        },
        "updated_at": {
          "type": "string",
          "description": "Unix timestamp representing the last time when the driver information was updated."
        },
        "status": {
          "type": "string",
          "description": "Unique status code for couriers current state.",
          "enum": [
            "free",
            "busy",
            "picking",
            "on_route"
          ]
        },
        "email": {
          "type": "string",
          "description": "The email address of the driver."
        },
        "profile_picture_url": {
          "type": "string",
          "description": "The url of the courier's profile picture."
        },
        "phone": {
          "type": "string",
          "description": "The phone number of the courier with country code included."
        },
        "deliveries_count": {
          "type": "number",
          "description": "Number of deliveries performed by the courier."
        },
        "reviews": {
          "type": "object",
          "description": "All the reviews associated with the courier.",
          "allOf": [
            {
              "$ref": "#/definitions/Reviews"
            }
          ]
        },
        "transport": {
          "type": "object",
          "description": "The transportation used by the courier to perform the deliveries.",
          "allOf": [
            {
              "$ref": "#/definitions/Transport"
            }
          ]
        }
      }
    },
    "Product": {
      "type": "object",
      "properties": {
        "product_id": {
          "type": "string",
          "description": "Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles."
        },
        "description": {
          "type": "string",
          "description": "Description of product."
        },
        "display_name": {
          "type": "string",
          "description": "Display name of product."
        },
        "capacity": {
          "type": "string",
          "description": "Capacity of product. For example, 4 people."
        },
        "image": {
          "type": "string",
          "description": "Image URL representing the product."
        }
      }
    },
    "Currency": {
      "type": "object",
      "properties": {
        "iso_code": {
          "type": "string",
          "description": "[ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code."
        },
        "symbol": {
          "type": "string",
          "description": "Symbol code for the given currency."
        }
      }
    },
    "Address": {
      "type": "object",
      "properties": {
        "address_id": {
          "type": "string",
          "description": "Unique identifier for the address."
        },
        "street": {
          "type": "string",
          "description": "Plain text name of the city. e.g. Stockholm."
        },
        "postcode": {
          "type": "string",
          "description": "Postal code of the address. e.g. 11218"
        },
        "city": {
          "type": "object",
          "description": "The city which this address belongs to.",
          "allOf": [
            {
              "$ref": "#/definitions/City"
            }
          ]
        }
      }
    },
    "City": {
      "type": "object",
      "properties": {
        "city_id": {
          "type": "string",
          "description": "Unique identifier for the city."
        },
        "name": {
          "type": "string",
          "description": "Plain text name of the city. e.g. Stockholm."
        },
        "region": {
          "type": "object",
          "description": "The region which the city belongs to.",
          "allOf": [
            {
              "$ref": "#/definitions/Region"
            }
          ]
        }
      }
    },
    "Country": {
      "type": "object",
      "properties": {
        "country_id": {
          "type": "string",
          "description": "Unique identifier for the country."
        },
        "name": {
          "type": "string",
          "description": "Plain text name of the country. e.g. Sweden."
        },
        "iso_code": {
          "type": "string",
          "description": "[ISO 31661-1](https://en.wikipedia.org/wiki/ISO_3166-1) 2 character country code."
        },
        "default_currency": {
          "type": "string",
          "description": "The default currency to use in this country.",
          "allOf": [
            {
              "$ref": "#/definitions/Currency"
            }
          ]
        }
      }
    },
    "Region": {
      "type": "object",
      "properties": {
        "region_id": {
          "type": "string",
          "description": "Unique identifier for the region."
        },
        "name": {
          "type": "string",
          "description": "Plain text name of the region. e.g. Uppland."
        },
        "country": {
          "type": "object",
          "description": "The country which the region belongs to.",
          "allOf": [
            {
              "$ref": "#/definitions/Country"
            }
          ]
        }
      }
    },
    "Location": {
      "type": "object",
      "properties": {
        "location_id": {
          "type": "string",
          "description": "Unique identifier representing a location."
        },
        "created_at": {
          "type": "string",
          "description": "Unix timestamp representing the moment in which the location was created."
        },
        "updated_at": {
          "type": "string",
          "description": "Unix timestamp representing the last time when the location information was updated."
        },
        "contact": {
          "type": "object",
          "description": "Main contact associated with the given location",
          "allOf": [
            {
              "$ref": "#/definitions/Contact"
            }
          ]
        },
        "formatted_address": {
          "type": "string",
          "description": "Pre-formatted address. eg. Gavlegatan 18B, 11330, Stockholm"
        },
        "address": {
          "type": "object",
          "description": "Associated address with the location.",
          "allOf": [
            {
              "$ref": "#/definitions/Address"
            }
          ]
        },
        "latitude": {
          "type": "number",
          "format": "float",
          "description": "The courier's latitude."
        },
        "longitude": {
          "type": "number",
          "format": "float",
          "description": "The courier's longitude."
        },
        "bearing": {
          "type": "number",
          "format": "float",
          "description": "The courier's bearing (degrees from 0 to 359)."
        },
        "comment": {
          "type": "string",
          "description": "Special comments or instructions associated with the given location."
        }
      }
    },
    "Profile": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string",
          "description": "First name of the user."
        },
        "last_name": {
          "type": "string",
          "description": "Last name of the user."
        },
        "email": {
          "type": "string",
          "description": "Email address of the user"
        },
        "phone": {
          "type": "object",
          "description": "The phone number of the user.",
          "allOf": [
            {
              "$ref": "#/definitions/Phone"
            }
          ]
        },
        "thumbnail": {
          "type": "string",
          "description": "Small profile image URL of the user"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "fields": {
          "type": "string"
        }
      }
    },
    "Delivery": {
      "type": "object",
      "properties": {
        "delivery_id": {
          "type": "string",
          "description": "Unique identifier representing a specific delivery."
        },
        "created_at": {
          "type": "integer",
          "format": "int32",
          "description": "Unix timestamp representing the moment the delivery was created."
        },
        "last_update_at": {
          "type": "integer",
          "format": "int32",
          "description": "Unix timestamp representing the last time when the delivery information was updated."
        },
        "pickup_location": {
          "type": "object",
          "description": "The pickup location information.",
          "allOf": [
            {
              "$ref": "#/definitions/Location"
            }
          ]
        },
        "dropoff_location": {
          "type": "object",
          "description": "The dropoff location information.",
          "allOf": [
            {
              "$ref": "#/definitions/Location"
            }
          ]
        },
        "tracking_url": {
          "type": "string",
          "description": "Automatically generated tracking URL to be used in order to track and monitor in real time the status of the current delivery."
        }
      }
    },
    "Quote": {
      "type": "object",
      "properties": {
        "quote_id": {
          "type": "string",
          "description": "Unique identifier representing a specific quote. Once created this id can be passed into the delivery creation to make sure the delivery prices match the generated values by the quote (so we don't find any surprises down the road!)."
        },
        "distance": {
          "type": "number",
          "format": "float",
          "description": "Estimated distance in Km of the total route."
        },
        "duration": {
          "type": "number",
          "format": "int32",
          "description": "Estimated duration in <b>minutes</b> of the delivery."
        },
        "price": {
          "type": "string",
          "description": "The calculated price for the delivery."
        },
        "currency": {
          "type": "object",
          "description": "The currency used for the price calculation",
          "allOf": [
            {
              "$ref": "#/definitions/Currency"
            }
          ]
        },
        "expires_at": {
          "type": "string",
          "description": "Unix timestamp representing the time when the quote will expire."
        },
        "pickup_location": {
          "type": "object",
          "description": "The pick up location information.",
          "allOf": [
            {
              "$ref": "#/definitions/Location"
            }
          ]
        },
        "pickup_eta": {
          "type": "number",
          "format": "int32",
          "description": "The estimated time in <b>minutes</b> for pick up for this quote."
        },
        "dropoff_location": {
          "type": "object",
          "description": "The drop off location information.",
          "allOf": [
            {
              "$ref": "#/definitions/Location"
            }
          ]
        },
        "dropoff_eta": {
          "type": "number",
          "format": "int32",
          "description": "The estimated time in <b>minutes</b> for drop off for this quote."
        }
      }
    },
    "NewQuote": {
      "type": "object",
      "properties": {
        "pickup_location": {
          "type": "object",
          "description": "The pick up location information.",
          "allOf": [
            {
              "$ref": "#/definitions/Location"
            }
          ]
        },
        "dropoff_location": {
          "type": "object",
          "description": "The drop off location information.",
          "allOf": [
            {
              "$ref": "#/definitions/Location"
            }
          ]
        }
      }
    },
    "Review": {
      "type": "object",
      "properties": {
        "score": {
          "type": "number",
          "format": "float",
          "description": "The rating given by the users for a particular delivery/courier."
        },
        "comment": {
          "type": "string",
          "description": "Comment provided by the user to give further feedback."
        }
      }
    },
    "Reviews": {
      "type": "object",
      "properties": {
        "average_score": {
          "type": "number",
          "format": "float",
          "description": "The average score from all the reviews performed for a given delivery/courier."
        },
        "reviews": {
          "type": "array",
          "description": "Array containing all the reviews for a given courier/delivery.",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/Review"
              }
            ]
          }
        }
      }
    },
    "Transport": {
      "type": "object",
      "properties": {
        "transport_id": {
          "type": "string",
          "description": "Unique identifier for the transportation type."
        },
        "type": {
          "type": "string",
          "description": "Value representing the transportation type.",
          "enum": [
            "Foot",
            "Bike",
            "CargoBike",
            "Motorcycle",
            "Car",
            "Truck"
          ]
        },
        "max_weight": {
          "type": "number",
          "format": "int32",
          "description": "Value in <b>KG</b> of the maximum weight this transport type can hold."
        },
        "max_dimensions": {
          "type": "object",
          "description": "Maximum dimensions of the package this transport type can hold.",
          "allOf": [
            {
              "$ref": "#/definitions/Dimension"
            }
          ]
        }
      }
    },
    "Dimension": {
      "type": "object",
      "properties": {
        "height": {
          "type": "number",
          "format": "int32",
          "description": "Height in <b>cm</b>"
        },
        "width": {
          "type": "number",
          "format": "int32",
          "description": "Width in <b>cm</b>"
        },
        "depth": {
          "type": "number",
          "format": "int32",
          "description": "Depth in <b>cm</b>"
        }
      }
    }
  }
}